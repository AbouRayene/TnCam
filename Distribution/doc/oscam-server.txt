oscam.server anpassen
=====================

es koennen mehrere [reader]-sections erstellt werden.
jede vollstaendige section wird dann als reader verwendet.
es muss auf jeden fall "Label" und "Device" gesetzt sein.

[reader]
Label         = name des readers. muss gesetzt sein !
                wird benutzt, um die zuordnung fuer auto-update
                in oscam.user zu machen.
Protokoll     = kommunikationsprotokoll zum reader. muss gesetzt sein !
                derzeit "mouse" oder "internal" fuer localen cardreader.
                im regelfall ist fuer alle cardreader mit einem
                "Device=/dev/sciX" das "Protocol=internal" einzustellen,
                fuer die anderen "Protocol=mouse" einstellen.
                fuer cascading "Protocol=camd35" fuer camd 3.5x-kompatiblem
                remote-server eintragen.
Device        = bei localem reader (mouse-mode) das device an dem der
                reader angeschlossen ist. beispiel:
                  Device=/dev/ttyS0
                  (reader an COM1: bei linux i386 und windows)
                  Device=/dev/tts/1
                  (reader an COM2: bei linux dbox2 -> multicam)
                bei remote-server im format <ip>,<port>[,<lport>]
                wird lport angegeben, werden alle abgehenden anfragen
                ueber diesen port erfolgen. ist fuer manche dsl-umgebungen
                notwendig um portforwarding einrichten zu koennen.
                wenn lport angegeben wird, muss er sich von allen anderen
                ports in der config unterscheiden. beispiel:
                  Device=cardserver.remote.tld,20248
                  (oscam befragt cardserver.remote.tld:20248)
                  Device=192.168.0.1,20410
                  (oscam befragt 192.168.0.1:20410)
                  Device=cs.rem.inf,20248,20251
                  (oscam befragt cs.rem.inf:20248, lokaler port 20251)
Detect        = statusleitung fuer "karte ist drin"
                normalerweise CD (Carrier Detect) oder DSR (Data Set Ready)
                alternativ auch CTS (Clear To Send) oder RING (Ring Indicator)
                wenn gar nichts hilft oder ein "3-draht"-kabel verwendet wird,
                so kann mit NONE die erkennung abgeschalten werden und es
                wird immer "karte ist drin" signalisiert.
                funktioniert die status-leitung invers,
                einfach ein "!" voranstellen, also z.b. "Detect=!CTS"
                standardmaessig wird CD verwendet.
                neu: bei mipsel-uclibc kann auch "gpio2" - "gpio7" benutzt werden.
Account       = benutzername und passwort beim zugriff auf remote-server.
                beispiel:
                  Account=benutzer1,password1
EMMCache      = definition emm-cache des readers
                derzeit nur fuer lokale reader.
                dies betrifft die auto-update (au) funktion.
                hiermit kann entschieden werden, ob update-kommandos vom
                provider immer oder nur unter bestimmten vorraussetzungen
                geschrieben werden.
                format: <usecache>,<rewrite>,<logging>
                <usecache> kann 0 oder 1 sein, bei der einstellung 0 wird kein
                cache benutzt und alle kommandos die kommen geschrieben.
                <rewrite> wird nur bei der einstellung usecache=1 herangezogen
                und bestimmt wie oft ein und dasselbe update-kommando
                geschrieben wird. <logging> kann 0,1 oder 2 sein, wobei
                logging=0: eintraege im logfile nur im fehlerfall.
                logging=1: emm's erscheinen im log, ausser den "doppelten".
                logging=2: alle emm's werden im log vermerkt.
                empfehlung: EmmCache=1,3,2
BlockNano     = definition emm-blocking des readers
                hiermit koennen bestimmt update-kommando's blockiert werden.
                bei verwendung ist es unumgaenglich, sich mit der materie
                vertraut zu machen !
                empfehlung: diesen parameter nicht verwenden.
Group         = jeder reader muss in eine oder mehrere gruppen
                eingetragen sein. darueber laesst sich dann bestimmen,
                welcher client auf welchen reader zugriff hat.
                format Group=<grp>[,<grp][,<grp>]...
                wobei <grp> zwischen 1 und 32 liegen muss. beispiel:
                  Group=1,2
CAID          = liste gueltiger caid's und mapping fuer diesen reader.
                format: CAID=<caid>[&<mask>][:<new caid>],...
                wird <mask> nicht angegeben ist <mask> automatisch FFFF.
                wird <new caid> nicht angegeben wird caid nicht veraendert.
                beispiel:
                  CAID=1702,1722
                  (dieser reader wird nur fuer caid 1702 und 1722 benutzt)
                  CAID=1702&FFDF
                  (hat genau die gleiche wirkung wie das erste beispiel,
                  dieser reader wird nur fuer caid 1702 und 1722 benutzt)
                  CAID=1702&FFDF:1702
                  (dieser reader wird nur fuer caid 1702 und 1722 benutzt
                  und die caid wird auf 1702 gemapped)
                  CAID=0100,0600&FF00
                  (dieser reader wird fuer caid 0100 und 0600-06FF benutzt)
                dieser parameter ist optional.
                wird dieser parameter nicht gesetzt sind alle caid's
                zunaechst erstmal gueltig und werden nicht gemapped.
