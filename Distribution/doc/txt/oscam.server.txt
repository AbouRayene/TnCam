oscam.server(5) 					       oscam.server(5)



NAME
       oscam.server - reader configuration file for OSCam

SYNOPSIS
       The  server  configuration  file  for OSCam contains reader parameters.
       sections in oscam.server are recurring (more than one reader possible).
       At least one [reader] section is required.

DESCRIPTIONS
   The [reader] section
       device = <device|bus:device>|<ip|hostname>,<port>[,<lport>]|pcsc
	  define local or remote reader

	   device:	device name
	   bus:devivce: bus name and device name of the Smartreader+
			(get the names with lsusb Bus and Device)
	   lport:	remapping to local port
	   PCSC:	number of PCSC readers, starting with 0

       key = DES key
	  key for newcamd remote reader encryption

       password = password
	  password for remote gbox reader

       premium = ???
	  for gbox reader

       account = user,password
	  user and password for remote reader

       pincode = pincode
	  pincode for Conax and Cryptoworks SCs

       services = [!]services[,[!]<services>]...
	  reader [de]assingment to service group, default=none

       inactivitytimeout = minutes
	  inactivity timeout for newcamd reader, default:none

       reconnecttimeout = minutes
	  TCP reconnect, if missing answers, default:none

       disableserverfilter = 0|1
	  1  =	ignore	caid  and ident settings of reader due faulty clients,
	  default=0

       label = name
	  name for reader, required

       fallback = 0|1
	  1 = define reader as fallback, standard  and	fallback  reader  must
	  have the same group, default:0

       logport = 0|port
	  camd3  reader  logport,  camd3  UDP must be activated, only works if
	  theres no camd3 cascading, 0=disabled, default=0

       caid = CAID[&<mask>][,CAID[&<mask>]]...
	  define CAID for  reader,  some  protocols  only  support  one  CAID,
	  default:mask=FFFF

	  example: CAID=0100,0200&FFDF

       boxid = NDS box ID
	  NDS receiver box id

       aeskey = AES key
	  AES key for Viaccess SCs

       detect = CD|DSR|CTS|RING|NONE|gpio[1-7]
	  status detect of card (NONE = no detection), default:CD

       cardmhz = mhz
	  set  standard  SC frequency in units of 10 kHz, for Irdeto SC set to
	  600, refer to OVERCLOCKING, default:357

       mhz = frequency
	  set reader frequency in units of 10 kHz, if mhz > cardmhz you are in
	  overclocking mode, refer to OVERCLOCKING, default:357

       deprecated  = 0|1
	  Frist the SC will be initialized in normal mode. If it fails, the SC
	  will be automatically reverted to deprecated mode, so  that  the  SC
	  speed  will not be changed and the communication will remain on nor
	  mal ATR speed of 9600 baud.

	  1 = use deprecated SC mode only, default:0

       protocol = reader protocol
	  reader protocol, required:
	   mouse
	   smartreader
	   internal
	   serial
	   camd35|cs357x
	   cs378x
	   gbox
	   newcamd|newcamd525
	   newcamd524
	   cccam
	   radegast
	   pcsc

       cccversion = <main version>.<version>.<sub version>
	  define CCcam version, default:none

	  exmaple: cccversion = 1.2.34

       cccbuild = <4-digit number>
	  define CCcam build, default:none

	  exmaple: cccbuild = 5678

       cccmaxhop = hops
	  define CCcam maximum SC distance, default:10

       ident = <CAID>:<ident>[,ident]...[,<CAID>:<ident>[,ident]...]...
	  define CAID and ident for reader

	  exmaple: ident = 0100:123456,234567;0200:345678,456789

       provid = ID
	  define provider ID for reader

       class = [!]class[,[!]class]...
	  define class in hex for reader

	  example: class = 01,02,!1b,!2b

       chid = CAID:ChID
	  define Irdeto ChID for reader

	  example: chid = 0100:12

       showcls = quantity
	  number of classes subscriptions to show for Viaccess SCs, default=10

       maxqlen = size
	  size of request queue for reader, default:128

       group = groupname
	  reader assingment to group, required

       emmcache = usecache,rewrite,logging
	  set EMM cache of local reader:
	   usecache = 0|1  1=enable EMM chaching, default:0
	   rewrite  = determines how often one and the same EMM is written
	   logging  = 0 = log errors only
		      1 = log all EMMs except the double EMMs
		      2 = log all EMMs

       blocknano = nano[,nano]...|all
	  list	of  EMM-nanos  to block (in hex w/o 0x) or all EMM-nanos, only
	  valid for physical readers, default:none

	   example: blocknano = 45,93,7a,ff
		    blocknano = all

       savenano = nano[,nano]....|all
	  list of EMM-nanos to save (in hex w/o 0x)  or  all  EMM-nanos,  only
	  valid for physical readers, default:none

	   example: savenano = 45,93,7a,ff
		    savenano = all

       readnano = [path]filename
	  write  file  (usually  a  copy  of a file saved by savenano) to your
	  smartcard, if no path is specified, the specified file  is  searched
	  for in the configuration directory, only valid for physical readers,
	  default:none

	   example: readnano = write.emm
		    readnano = /var/oscam/write.emm

       n3_rsakey|rsakey = RSA key
	  RSA key for Nagravision SCs / CAM key data for Irdeto SCs

       n3_boxkey|boxkey = box key
	  box key for Nagravision SCs / CAM key for Irdeto SCs

       tiger_rsakey = RSA key
	  RSA key for Tiger Nagravision SCs

       tiger_ideakey = IDEA key
	  IDEA key for Tiger Nagravision SCs

OVERCLOCKING
	 Dreambox and other internal readers

	  For Dreambox and other internal readers the highest possible	clock
	  rate will be auto detected. The mhz parameter will be ignored.

	 Phoenix / Smartmouse reader

	  Overclocking	does  not  work  with  Windows	and Mac OS X.  Set mhz
	  equivalent to the frequency of the reader.  OSCam can  not  set  the
	  frequency of the reader.

	 Smargo Smartreader+

	  Set  the  reader  frequency with the native Smargo Smartreader+ tool
	  (srp_tools).	Do not set mhz and cardmhz.

       OSCam tries to set the baudrate automatically.  A standard serial  port
       has limited baudrate settings, so SC overclocking might not work.  When
       using a serial reader the best way for overclocking is connecting it to
       a FTDI based USB to serial port adapter.

       If  overclocking  does  not  work, verify the effective baudrate in the
       logfile.  If it deviates too much from the requested baudrate,  the  SC
       will  not  be  recognized  (no  ATR)  and  the  value for mhz should be
       adjusted again.	The higher the baudrate, the more accurate the	effec
       tive baudrate can be.

EXAMPLES
	 serial mouse compatible reader

	   [reader]
	   label    = myserialmousereader
	   detect   = cd
	   protocol = mouse
	   device   = /dev/ttyS1
	   group    = 1
	   caid     = 0100
	   services = myservice,!thisservice

	 USB mouse compatible reader

	   [reader]
	   label    = myusbmousereader
	   detect   = cd
	   protocol = mouse
	   device   = /dev/ttyUSB0
	   aeskey   = 0102030405060708090a0b0c0d0e0f10
	   group    = 2
	   caid     = 0200

	 camd 3.78x reader

	   [reader]
	   label    = mycamd378xreader
	   protocol = cs378x
	   device   = 192.168.0.1,1234
	   account  = user,password
	   group    = 3

	 newcamd reader

	   [reader]
	   label    = mynewcamdreader
	   protocol = newcamd
	   key	    = 0102030405060708091011121314
	   device   = 192.168.0.2,2345
	   account  = user,password
	   group    = 4

	 CCcam reader

	   [reader]
	   label = mycccamreader
	   protocol = cccam
	   device = 192.168.0.3,3456
	   account = user,password
	   group = 5
	   caid = 0300,0400,0500
	   cccversion = 1.2.3
	   cccbuild = 4567

	 PCSC reader

	   [reader]
	   label    = mypcscreader
	   protocol = pcsc
	   device   = 0
	   aeskey   = 0102030405060708090a0b0c0d0e0f10
	   group    = 6
	   caid     = 0600

	 Smargo Smartreader+

	   [reader]
	   label    = mysmartreader
	   protocol = smartreader
	   device   = 001:002
	   aeskey   = 0102030405060708090a0b0c0d0e0f10
	   group    = 7
	   caid     = 0700

	 internal reader

	   [reader]
	   label    = myinternalreader
	   protocol = internal
	   device   = /dev/sci0
	   group    = 8
	   caid     = 0800

SEE ALSO
       oscam(1), oscam.conf(5), oscam.user(5), oscam.srvid(5), oscam.guess(5),
       oscam.cert(5), oscam.services(5), oscam.ird(5), oscam.ac(5)



							       oscam.server(5)
