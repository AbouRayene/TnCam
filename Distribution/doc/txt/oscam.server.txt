oscam.server(5) 										  oscam.server(5)



NAME
       oscam.server - reader configuration file for OSCam

SYNOPSIS
       The  server  configuration file for OSCam contains reader parameters.  sections in oscam.server are recur‐
       ring (more than one reader possible).  At least one [reader] section is required.

DESCRIPTIONS
   The [reader] section
       device = <device|bus:device>|Serial:Reader serial|<ip|hostname>,<port>[,<lport>]|pcsc|<0|1>|constantcw
	  define local or remote reader

	   device:	device name
	   bus:device: bus name and device name of the Smartreader+
			(get the names with lsusb 'Bus' and 'Device')
	   serial	serial number of Smartreader+
			(get the serial number while starting OSCam)
	   lport:	remapping to local port
	   PCSC:	number of PCSC reader, starting with 0
	   0|1: 	for Coolstream HD-1 STB only: select reader 0 or
			reader 1
	   constantcw:	constant CW file name

	  constant CW file format: CA (4 digits):ID (6 digits):SID (4 digits):PMT PID (4 digits):ECM PID (4  dig‐
	  its):key (16 Bytes seperated by spaces)

	  example: 1234:123456:1234:1234:1234:00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F

       enable = 0|1
	  0 = deactivate reader, default:1

       key = DES key
	  key for newcamd remote reader encryption

       password = password
	  password for remote gbox reader

       premium = ???
	  for gbox reader

       account = user,password
	  user and password for remote reader

       pincode = pincode
	  pincode for Conax and Cryptoworks SCs

       services = [!]services[,[!]<services>]...
	  reader [de]assignment to service group, default=none

       inactivitytimeout = minutes
	  inactivity timeout for newcamd reader, default:none

       reconnecttimeout = minutes
	  TCP reconnect, if missing answers, default:none

       disableserverfilter = 0|1
	  1 = ignore caid and ident settings of reader due faulty clients, default=0

       label = name
	  name for reader, required

       fallback = 0|1
	  1 = define reader as fallback, standard and fallback reader must have the same group, default:0

       logport = 0|port
	  camd3  reader  logport,  camd3  UDP must be activated, only works if there's no camd3 cascading, 0=dis‐
	  abled, default=0

       caid = CAID[&<mask>][,CAID[&<mask>]]...
	  define CAID for reader, some protocols only support one CAID, default:mask=FFFF

	  example: CAID = 0100,0200&FFDF

       audisabled = 0|1
	  1 = exclude reader from auto AU, default:0

       auprovid = provider ID
	  set provider ID to use the right reader for auto AU

	  example: auprovid = 123456

       boxid = NDS box ID
	  NDS receiver box id

       aeskey = AES key
	  16 byte AES key for Viaccess SCs

       aeskeys = CAID@ident:AES key #1[,AES key #2],...[;CAID@ident:AES key #2[,AES key #3],...]...
	  mutiple 16 byte AES keys for Viaccess SCs

	  special AES keys:

	   00 = no AES key specified, do not return any CW
	   FF = no AES key specified, return CW received from the SC

	  example:

	   aeskeys = 0100@012345:000102030405060708090a0b0c0d0e0f;0200@543210:0,0,0f0e0d0c0b0a090807060504030201

       detect = CD|DSR|CTS|RING|NONE|gpio[1-7]
	  status detect of card (NONE = no detection), default:CD

       cardmhz = mhz
	  set standard SC frequency in units of 10 kHz,  for  Irdeto  SC  set  to  600,  refer	to  OVERCLOCKING,
	  default:357

       mhz = frequency
	  set  reader frequency in units of 10 kHz, if mhz > cardmhz you are in overclocking mode, refer to OVER‐
	  CLOCKING, default:357

       deprecated = 0|1
	  Frist the SC will be initialized in normal mode. If it fails, the SC will be automatically reverted  to
	  deprecated  mode,  so that the SC speed will not be changed and the communication will remain on normal
	  ATR speed of 9600 baud.

	  1 = use deprecated SC mode only, default:0

       protocol = reader protocol
	  reader protocol, required:
	   mouse
	   mp35
	   smartreader
	   internal
	   serial
	   camd35|cs357x
	   cs378x
	   gbox
	   newcamd|newcamd525
	   newcamd524
	   cccam
	   radegast
	   pcsc
	   constcw

       cccversion = <main version>.<version>.<sub version>
	  define CCcam version, default:none

	  example: cccversion = 1.2.34

       cccmaxhops = hops
	  define CCcam maximum SC distance hops, default:10
	   0 = local SCs only
	   1 = local SCs and + 1 hop
	   2 = local SCs and + 2 hops
	   and so on

       ident = <CAID>:<ident>[,ident]...[,<CAID>:<ident>[,ident]...]...
	  define CAID and ident for reader

	  example: ident = 0100:123456,234567;0200:345678,456789

       provid = ID
	  define provider ID for reader

       class = [!]class[,[!]class]...
	  define class in hex for reader

	  example: class = 01,02,!1b,!2b

       chid = CAID:ChID
	  define Irdeto ChID for reader

	  example: chid = 0100:12

       showcls = quantity
	  number of classes subscriptions to show for Viaccess SCs, default=10

       maxqlen = size
	  size of request queue for reader, default:128

       group = groupname
	  reader assingment to group, required

       emmcache = usecache,rewrite,logging
	  set EMM cache of local reader:
	   usecache = 0|1 1 = enable EMM caching, default:0
	   rewrite  = determines how often one and the same EMM is written
	   logging  = EMM logging mask:
		      0 = EMM logging disabled
		      1 = logging EMM errors
		      2 = logging written EMMs
		      4 = logging skipped EMMs
		      8 = logging blocked EMMs

	   example: emmcache = 1,3,10
		    emmcache = 1,2,6

	   types of caching: cache1 = ECM and CW in cache already
			     cache2 = ECM and checksum in the cache already

       ecmcache = 0|1
	  1 = enable ECM caching, default:1

       blocknano = nano[,nano]...|all
	  list of EMM-nanos to block (in hex  w/o  0x)	or  all  EMM-nanos,  only  valid  for  physical  readers,
	  default:none

	   example: blocknano = 45,93,7a,ff
		    blocknano = all

       blockemm-u = 0|1
	  1 = block unique EMMs, default:0

       blockemm-s = 0|1
	  1 = block shared EMMs, default:0

       blockemm-g = 0|1
	  1 = block global EMMs, default:0

       blockemm-unknown = 0|1
	  1 = block unknown types of EMMs, default:0

       savenano = nano[,nano]....|all
	  list	of  EMM-nanos  to  save  (in  hex  w/o	0x)  or  all  EMM-nanos, only valid for physical readers,
	  default:none

	   example: savenano = 45,93,7a,ff
		    savenano = all

       readnano = [path]filename
	  write file (usually a copy of a file saved by savenano) to your smartcard, if no path is specified, the
	  specified  file  is  searched  for  in  the  configuration  directory, only valid for physical readers,
	  default:none

	   example: readnano = write.emm
		    readnano = /var/oscam/write.emm

       lb_weight = weight
	  the higher the value the higher the probability for reader selection, default:100

	   It's an divider for the average responstime.

       force_irdeto = 0|1
	  1 = force Irdeto SC mode even if RSA key is set for Irdeto tunnled Nagravion SC, default:0

       n3_rsakey|rsakey = RSA key
	  RSA key for Nagravision SCs / CAM key data for Irdeto SCs

       n3_boxkey|boxkey = box key
	  box key for Nagravision SCs / CAM key for Irdeto SCs

       tiger_rsakey = RSA key
	  RSA key for Tiger Nagravision SCs

       tiger_ideakey = IDEA key
	  IDEA key for Tiger Nagravision SCs

       cccdisableretryecm = 0|1
	  0 = enables ECM retrying: When an ECM request is denied from an CCCam server, OSCam immediatelly  sends
	  a  new ECM request, 1= disables ECM retrying: When an ECM request is denied from an CCCam server, OSCam
	  sends no new ECM request, default:0

       cccdisableautoblock = 0|1
	  0 = enables auto block: When an ECM request is send to an CCCam server, it tries the SC with the lowest
	  hop.	If it is denied, the SID is blocked on this SC. When all SC are blocked, the CAID:PROV:SID infor‐
	  mation is stored in a auto block list and is newer send again, 1= disabled auto block, default:1

       cccwantemu = 0|1
	  1 = request to provide emu from CCCam server, too, default:0

       updateinval = seconds
	  interval to provide share list update to CCCam clients, default:240

       mode = mode
	  set card init mode for AzBox reader, default:none

OVERCLOCKING
       ·  Dreambox and other internal readers

	  For Dreambox and other internal readers the highest possible clockrate will be auto detected.  The  mhz
	  parameter lets you override the values chosen by OSCam, if it differs from 357 and 358, but usually you
	  will not set any value for mhz.

	  For certain Dreamboxes (especially PPC clones) the default mhz parameter leads to slow ECM times and/or
	  "not found" ECMs. By setting mhz to values like 200, 300, 400, ... 1600 you can find a value that works
	  for your receiver and your card. The higher the mhz value, the slower the ECM time (strange enough).

	  If you choose the value too low, your card is not recognized (no ATR or "card not supported").  If  you
	  choose the value too high, you get slow ECM times. Our experience is that either no mhz line, or a line
	  mhz = 1000 works best.

       ·  Phoenix / Smartmouse reader

	  Overclocking does not work with Windows and Mac OS X.  Set mhz  equivalent  to  the  frequency  of  the
	  reader.  OSCam can not set the frequency of the reader.

       ·  Smargo Smartreader+

	  Set  the  reader  frequency  with  the native Smargo Smartreader+ tool (srp_tools).  Do not set mhz and
	  cardmhz.

       OSCam tries to set the baudrate automatically.  A standard serial port has limited baudrate  settings,  so
       SC overclocking might not work.	When using a serial reader the best way for overclocking is connecting it
       to a FTDI based USB to serial port adapter.

       If overclocking does not work, verify the effective baudrate in the logfile.  If it deviates too much from
       the  requested  baudrate,  the SC will not be recognized (no ATR) and the value for mhz should be adjusted
       again.  The higher the baudrate, the more accurate the effective baudrate can be.

EXAMPLES
       ·  serial mouse compatible reader

	   [reader]
	   label    = myserialmousereader
	   detect   = cd
	   protocol = mouse
	   device   = /dev/ttyS1
	   group    = 1
	   caid     = 0100
	   services = myservice,!thisservice

       ·  USB mouse compatible reader

	   [reader]
	   label    = myusbmousereader
	   detect   = cd
	   protocol = mouse
	   device   = /dev/ttyUSB0
	   aeskey   = 0102030405060708090a0b0c0d0e0f10
	   group    = 2
	   caid     = 0200

       ·  camd 3.78x reader

	   [reader]
	   label    = mycamd378xreader
	   protocol = cs378x
	   device   = 192.168.0.1,1234
	   account  = user,password
	   group    = 3

       ·  newcamd reader

	   [reader]
	   label    = mynewcamdreader
	   protocol = newcamd
	   key	    = 0102030405060708091011121314
	   device   = 192.168.0.2,2345
	   account  = user,password
	   group    = 4

       ·  CCcam reader

	   [reader]
	   label = mycccamreader
	   protocol = cccam
	   device = 192.168.0.3,3456
	   account = user,password
	   group = 5
	   caid = 0300,0400,0500
	   cccversion = 1.2.3
	   cccbuild = 4567

       ·  PCSC reader

	   [reader]
	   label    = mypcscreader
	   protocol = pcsc
	   device   = 0
	   aeskey   = 0102030405060708090a0b0c0d0e0f10
	   group    = 6
	   caid     = 0600

       ·  Smargo Smartreader+

	   [reader]
	   label    = mysmartreader
	   protocol = smartreader
	   device   = 001:002
	   aeskey   = 0102030405060708090a0b0c0d0e0f10
	   group    = 7
	   caid     = 0700

       ·  internal reader

	   [reader]
	   label    = myinternalreader
	   protocol = internal
	   device   = /dev/sci0
	   group    = 8
	   caid     = 0800

       ·  constant CW
	   [reader]
	   label    = myconstantcw
	   protocol = constcw
	   device   = /var/keys/constant.cw
	   group    = 9

SEE ALSO
       list_smargo(1),	oscam(1),  oscam.ac(5),  oscam.cert(5),  oscam.conf(5),   oscam.guess(5),   oscam.ird(5),
       oscam.provid(5), oscam.services(5), oscam.srvid(5), oscam.tiers(5), oscam.user(5)



												  oscam.server(5)
