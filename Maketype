SHELL		= /bin/sh

ifeq ($(wildcard oscam-boxkeys.np), oscam-boxkeys.np)
  KFLAG		= -DCS_WITH_BOXKEYS
endif

WITH_SSL=$(subst ",,$(filter-out \#define, $(shell grep '^\#define WITH_SSL' oscam-config.h)))
ifeq ($(WITH_SSL), WITH_SSL)
	LIB_SSL=-lssl
endif

LIB_PTHREAD = -lpthread
LIB_MATH = -lm

override STD_LIBS := $(LIB_PTHREAD) $(LIB_MATH)
override STD_DEFS := -D'CS_SVN_VERSION="$(SVN_REV)"'

# Compiler warnings
CC_WARN = -Winline -Wall -Wextra

# Compiler optimizations
CC_OPTS = -O2

CC = $(CROSS)gcc
AR = $(CROSS)ar
STRIP = $(CROSS)strip
RANLIB = $(CROSS)ranlib

# CROSS variable was never used or set in the times when DS_xxx
# variables ruled the world. So it fairly safe to assume that if
# it is set then no compatability with DS_CC, DS_AR, DS_ST and DS_RL
# is needed.
ifeq "$(CROSS)" ""
# Backwards compatability. It was expected that when DS_CC,
# DS_AR, DS_ST and DS_RL were set they are used as CC, AR,
# STRIP and RANLIB
ifneq "$(DS_CC)" ""
override CC=$(DS_CC)
endif
ifneq "$(DS_AR)" ""
override AR=$(DS_AR)
endif
ifneq "$(DS_ST)" ""
override STRIP=$(DS_ST)
endif
ifneq "$(DS_RL)" ""
override RANLIB=$(DS_RL)
endif
endif

CFLAGS  = $(STD_DEFS) $(CC_WARN) $(CC_OPTS) $(DS_OPTS) $(KFLAG) $(DS_CFLAGS)
LDFLAGS = $(STD_DEFS) $(DS_OPTS) $(DS_LDFLAGS)
ARFLAGS = -rcsl
LIBS    = $(STD_LIBS) $(DS_LIBS) $(OS_LIBS) $(OS_PTLI) $(LIB_SSL)
export		CC AR STRIP RANLIB CFLAGS LDFLAGS ARFLAGS

GENERAL		= Makefile Maketype globals.h oscam-config.h

# Process EXTRA_xxx variables
CC_WARN += $(EXTRA_CC_WARN)
CC_OPTS += $(EXTRA_CC_OPTS)

ifeq ($(wildcard csgbox), csgbox)
 VERX	= -gbx-$(subst ",,$(filter-out \#define GBXVERSION,$(shell grep GBXVERSION csgbox/gbox.h)))
endif

EXEFILE1	= Distribution/oscam-$(VER)$(VERX)-$(subst cygwin,cygwin.exe,$(TYP))
EXEFILE2	= Distribution/list_smargo-$(VER)$(VERX)-$(subst cygwin,cygwin.exe,$(TYP))

LIBDIR		= lib
LIBFILE1	= $(LIBDIR)/libcs-$(TYP).a
LIBFILE2	= $(LIBDIR)/libcscrypt-$(TYP).a
LIBFILE3	= $(LIBDIR)/libcsctapi-$(TYP).a
LIBFILE4	= $(LIBDIR)/libminilzo-$(TYP).a

OBJECTS1	= $(LIBFILE1)(oscam-simples.o) \
		  $(LIBFILE1)(oscam-config.o) \
		  $(LIBFILE1)(oscam-log.o) \
		  $(LIBFILE1)(oscam-reader.o) \
		  $(LIBFILE1)(oscam-garbage.o) \
		  $(LIBFILE1)(reader-common.o) \
		  $(LIBFILE1)(reader-irdeto.o) \
		  $(LIBFILE1)(reader-viaccess.o) \
		  $(LIBFILE1)(reader-videoguard1.o) \
		  $(LIBFILE1)(reader-videoguard12.o) \
		  $(LIBFILE1)(reader-videoguard2.o) \
		  $(LIBFILE1)(reader-videoguard-common.o) \
		  $(LIBFILE1)(reader-nds.o) \
		  $(LIBFILE1)(reader-seca.o) \
		  $(LIBFILE1)(reader-bulcrypt.o) \
		  $(LIBFILE1)(reader-cryptoworks.o) \
		  $(LIBFILE1)(reader-conax.o) \
		  $(LIBFILE1)(reader-dre.o) \
		  $(LIBFILE1)(reader-nagra.o) \
		  $(LIBFILE1)(reader-tongfang.o) \
		  $(LIBFILE1)(module-camd33.o) \
		  $(LIBFILE1)(module-camd35.o) \
		  $(LIBFILE1)(module-radegast.o) \
		  $(LIBFILE1)(module-serial.o) \
		  $(LIBFILE1)(module-monitor.o) \
		  $(LIBFILE1)(module-newcamd.o) \
		  $(LIBFILE1)(module-cccam.o) \
		  $(LIBFILE1)(module-cccshare.o) \
		  $(LIBFILE1)(module-pandora.o) \
		  $(LIBFILE1)(module-gbox.o) \
		  $(LIBFILE1)(module-pandora.o) \
		  $(LIBFILE1)(module-constcw.o) \
		  $(LIBFILE1)(module-dvbapi.o) \
		  $(LIBFILE1)(module-stat.o) \
		  $(LIBFILE1)(module-csp.o) \
		  $(LIBFILE1)(module-datastruct-llist.o) \
		  $(LIBFILE1)(oscam-chk.o) \
		  $(LIBFILE1)(oscam-http.o) \
		  $(LIBFILE1)(oscam-http-helpers.o) \
		  $(LIBFILE1)(oscam-ac.o) \
		  $(LIBFILE1)(module-coolapi.o)\
		  $(LIBFILE1)(module-lcd.o)

ifneq ($(LIBUSB),)
all:		prepare $(EXEFILE1) $(EXEFILE2)
else
all:		prepare $(EXEFILE1)
endif

prepare:
		@-echo "-----------------------------------------------------"
		@-echo "Build for platform $(TYP)"
		@-echo "-----------------------------------------------------"
		@echo "$(TYP)" | awk -F- ' \
		  { \
		    printf("#define CS_OSTYPE \"%s\"\n", $$0);  \
		    printf("#define CS_OS_CPU \"%s\"\n", $$1);  \
		    printf("#define CS_OS_HW  \"%s\"\n", $$2);  \
		    printf("#define CS_OS_SYS \"%s\"\n", $$3);  \
		  }' > oscam-ostype.h
		@[ -d "$(LIBDIR)" ] || mkdir "$(LIBDIR)"

ifeq ($(wildcard csgbox), csgbox)
		@-echo "#define CS_WITH_GBOX 1" >> oscam-ostype.h
		$(MAKE) -C csgbox
endif

		$(MAKE) -C cscrypt
		$(MAKE) -C csctapi
		$(MAKE) -C algo

$(EXEFILE1):	oscam.c $(LIBFILE1) $(LIBFILE2) $(LIBFILE3) $(LIBFILE4) $(GENERAL)
		$(CC) $(LDFLAGS) $(LIBS) oscam.c $(LIBFILE1) $(LIBFILE2) $(LIBFILE3) $(LIBFILE4) $(LIBUSB) $(LIBPCSC) $(LIBRT) -o $@
ifdef DS_ST
		$(STRIP) $@
endif

$(EXEFILE2):	utils/list_smargo.c
		$(CC) $(LDFLAGS) $(LIBS) utils/list_smargo.c $(LIBUSB) $(LIBRT) -o $@
		$(STRIP) $@

$(LIBFILE1):	$(OBJECTS1)
		-$(RANLIB) $@

$(OBJECTS1):	$(GENERAL)

.c.a:
		$(CC) $(CFLAGS) -c $<
		$(AR) $(ARFLAGS) $@ $*.o
		-@rm -f $*.o

.SUFFIXES:	.o .c .a
